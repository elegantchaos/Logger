# --------------------------------------------------------------------------------
# This workflow was automatically generated by ActionBuilderTool 2.1.0 (90).
# (see https://github.com/elegantchaos/ActionBuilderCore for more details)
# --------------------------------------------------------------------------------

name: Tests

on: [push, pull_request]

jobs:

    linux-swift62:
        name: Linux (Swift 6.2)
        runs-on: ubuntu-22.04
        steps:
        - name: Checkout
          uses: actions/checkout@v4
        - name: Make Logs Directory
          run: mkdir logs
        - name: Select Swift
          uses: beeauvin/swiftly-swift@v1
          with:
            swift-version: "6.2-snapshot"
        - name: Swift Version
          run: swift --version
        - name: Build (release)
          run: swift build --configuration release --quiet
        - name: Test (release XCTest)
          run: |
            set -o pipefail
            swift test --disable-swift-testing --configuration release --quiet
        - name: Test (release Swift Testing)
          run: |
            set -o pipefail
            swift test --disable-xctest --configuration release --quiet


    macOS-swift62:
        name: macOS (Swift 6.2)
        runs-on: macos-15
        steps:
        - name: Checkout
          uses: actions/checkout@v4
        - name: Install xcbeautify
          run: brew install xcbeautify
        - name: Make Logs Directory
          run: mkdir logs
        - name: Select Swift
          uses: beeauvin/swiftly-swift@v1
          with:
            swift-version: "6.2-snapshot"
        - name: Swift Version
          run: swift --version
        - name: Build (release)
          run: swift build --configuration release --quiet
        - name: Test (release XCTest)
          run: |
            set -o pipefail
            swift test --disable-swift-testing --configuration release | xcbeautify --quiet --disable-logging --renderer github-actions
        - name: Test (release Swift Testing)
          run: |
            set -o pipefail
            swift test --disable-xctest --configuration release | xcbeautify --quiet --disable-logging --renderer github-actions


    xcode-swift62:
        name: iOS/tvOS/watchOS (Swift 6.2, Xcode 26.0.0)
        runs-on: macos-15
        steps:
        - name: Checkout
          uses: actions/checkout@v4
        - name: Install xcbeautify
          run: brew install xcbeautify
        - name: Make Logs Directory
          run: mkdir logs
        - name: Select Xcode Version
          run: |
            ls -d /Applications/Xcode* > logs/xcode-versions.log
            sudo xcode-select -s /Applications/Xcode_26.0.0.app
            xcodebuild -version
            swift --version
        - name: Detect Workspace & Scheme (iOS)
          run: |
            WORKSPACE="Logger.xcworkspace"
            if [[ ! -e "$WORKSPACE" ]]
            then
              WORKSPACE="."
              GOTPACKAGE=$(xcodebuild -workspace . -list | (grep Logger-Package || true))
              if [[ $GOTPACKAGE != "" ]]
              then
                SCHEME="Logger-Package"
              else
                SCHEME="Logger"
              fi
            else
              SCHEME="Logger-iOS"
            fi
            echo "set -o pipefail; export PATH='swift-latest:$PATH'; WORKSPACE='$WORKSPACE'; SCHEME='$SCHEME'; xcodebuild -downloadPlatform iOS > logs/download-iOS.log; xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -showdestinations > logs/destinations-iOS.log" > setup.sh
        - name: Test (iOS Release)
          run: |
            source "setup.sh"
            echo "Testing workspace $WORKSPACE scheme $SCHEME."
            set -o pipefail
            xcodebuild test -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "name=iPhone SE (3rd generation)" -configuration Release CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO ENABLE_TESTABILITY=YES | tee logs/xcodebuild-iOS-test-release.log | xcbeautify --quiet --disable-logging --renderer github-actions
        - name: Detect Workspace & Scheme (tvOS)
          run: |
            WORKSPACE="Logger.xcworkspace"
            if [[ ! -e "$WORKSPACE" ]]
            then
              WORKSPACE="."
              GOTPACKAGE=$(xcodebuild -workspace . -list | (grep Logger-Package || true))
              if [[ $GOTPACKAGE != "" ]]
              then
                SCHEME="Logger-Package"
              else
                SCHEME="Logger"
              fi
            else
              SCHEME="Logger-tvOS"
            fi
            echo "set -o pipefail; export PATH='swift-latest:$PATH'; WORKSPACE='$WORKSPACE'; SCHEME='$SCHEME'; xcodebuild -downloadPlatform tvOS > logs/download-tvOS.log; xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -showdestinations > logs/destinations-tvOS.log" > setup.sh
        - name: Test (tvOS Release)
          run: |
            source "setup.sh"
            echo "Testing workspace $WORKSPACE scheme $SCHEME."
            set -o pipefail
            xcodebuild test -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "name=Apple TV 4K (3rd generation)" -configuration Release CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO ENABLE_TESTABILITY=YES | tee logs/xcodebuild-tvOS-test-release.log | xcbeautify --quiet --disable-logging --renderer github-actions
        - name: Detect Workspace & Scheme (watchOS)
          run: |
            WORKSPACE="Logger.xcworkspace"
            if [[ ! -e "$WORKSPACE" ]]
            then
              WORKSPACE="."
              GOTPACKAGE=$(xcodebuild -workspace . -list | (grep Logger-Package || true))
              if [[ $GOTPACKAGE != "" ]]
              then
                SCHEME="Logger-Package"
              else
                SCHEME="Logger"
              fi
            else
              SCHEME="Logger-watchOS"
            fi
            echo "set -o pipefail; export PATH='swift-latest:$PATH'; WORKSPACE='$WORKSPACE'; SCHEME='$SCHEME'; xcodebuild -downloadPlatform watchOS > logs/download-watchOS.log; xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -showdestinations > logs/destinations-watchOS.log" > setup.sh
        - name: Build (watchOS release)
          run: |
            source "setup.sh"
            echo "Building workspace $WORKSPACE scheme $SCHEME."
            set -o pipefail
            xcodebuild clean build -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "name=Apple Watch Series 10 (42mm)" -configuration Release CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO ENABLE_TESTABILITY=YES | tee logs/xcodebuild-watchOS-build-release.log | xcbeautify --quiet --disable-logging --renderer github-actions
        - name: Upload Logs
          uses: actions/upload-artifact@v4
          if: always()
          with:
            name: xcode-swift62-logs
            path: logs

